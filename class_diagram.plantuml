@startuml
package Model {

class ChorbRoundDance{
+ addDancer(newDancer : string, leftDancer : string, rightDancer : string) : bool
+ removeDancer(dancer : string) : bool
+ swapDancers(leftDancer : string, rightDancer : string) : void 
}

class ChorbDancer{

}

}

package View {

interface RoundDanceView {
+ showRoundDance() : void
+ showInfoAboutDancer(dancerInfo: string) : void
+ showError(errorMessage: string) : void
}

class ConsoleRoundDanceView implements RoundDanceView {
+ showRoundDance(RoundDance) : void
+ showInfoAboutDancer(Dancer) : void
+ showError(errorMessage: string) : void
}

class MockView implements RoundDanceView {
+ showRoundDance(RoundDance) : void
+ showInfoAboutDancer(Dancer) : void
+ showError(errorMessage: string) : void
}

note top of MockView: Facilitates unit testing

}

package Presenter {
class RoundDancePresenter {
+ onAddDancer(Dancer)
+ onRemoveDancer(Dancer)
+ onSwapDancers(Dancer, Dancer)
+ onGrab(who, <left|right|both>)
+ onRelease(who, <left|right|both>)
+ onGetDancerInfo(Dancer)
+ onShowRoundDance()
+ onExit()
}

}
@enduml
